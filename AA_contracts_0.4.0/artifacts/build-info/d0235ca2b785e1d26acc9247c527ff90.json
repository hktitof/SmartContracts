{
	"id": "d0235ca2b785e1d26acc9247c527ff90",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"Learning Contrats v0.4.0/BallotWithModifier.sol": {
				"content": "pragma solidity ^0.4.0;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n        address delegate;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount;\r\n    }\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    Stage public stage = Stage.Init;\r\n    \r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    event votingCompleted();\r\n    \r\n    uint startTime;\r\n    //modifiers\r\n   modifier validStage(Stage reqStage)\r\n    { require(stage == reqStage);\r\n      _;\r\n    }\r\n\r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    function Ballot(uint8 _numProposals) public  {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public validStage(Stage.Reg) {\r\n        //if (stage != Stage.Reg) {return;}\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; }        \r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r\n       // if (stage != Stage.Vote) {return;}\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;   \r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();}        \r\n        \r\n    }\r\n\r\n    function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r\n       //if(stage != Stage.Done) {return;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n       assert (winningVoteCount > 0);\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Learning Contrats v0.4.0/BallotWithModifier.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "votingCompleted",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":25:2381  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":283:293  Stage.Init */\n  0x0\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":262:293  Stage public stage = Stage.Init */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":642:904  function Ballot(uint8 _numProposals) public  {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":642:904  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":712:722  msg.sender */\n  caller\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":698:709  chairperson */\n  0x0\n  0x1\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":698:722  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":762:763  2 */\n  0x2\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":733:739  voters */\n  0x1\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":733:752  voters[chairperson] */\n  0x0\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":740:751  chairperson */\n  dup1\n  0x1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":733:752  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":733:759  voters[chairperson].weight */\n  0x0\n  add\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":733:763  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":829:842  _numProposals */\n  dup1\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":810:842  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":810:819  proposals */\n  0x2\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":810:842  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  jump\t// in(tag_6)\ntag_5:\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":861:870  Stage.Reg */\n  0x1\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":853:858  stage */\n  0x0\n  dup1\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":853:870  stage = Stage.Reg */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":893:896  now */\n  timestamp\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":881:890  startTime */\n  0x3\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":881:896  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":642:904  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":25:2381  contract Ballot {\r... */\n  jump(tag_8)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\ntag_9:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":25:2381  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1018:1360  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1018:1360  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1899:2378  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1899:2378  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1423:1891  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1423:1891  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":262:293  Stage public stage = Stage.Init */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":262:293  Stage public stage = Stage.Init */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1018:1360  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_8:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1071:1080  Stage.Reg */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":533:541  reqStage */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:541  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:529  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:541  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      eq\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":516:542  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1156:1167  chairperson */\n      0x0\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1142:1167  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1142:1152  msg.sender */\n      caller\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1142:1167  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1142:1192  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1171:1177  voters */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1171:1186  voters[toVoter] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1178:1185  toVoter */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1171:1186  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1171:1192  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1142:1192  msg.sender != chairperson || voters[toVoter].voted */\n    tag_24:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1138:1201  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_25\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1194:1201  return; */\n      jump(tag_23)\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1138:1201  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_25:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1236:1237  1 */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1211:1217  voters */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1211:1226  voters[toVoter] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1218:1225  toVoter */\n      dup5\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1211:1226  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1211:1233  voters[toVoter].weight */\n      0x0\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1211:1237  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1272:1277  false */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1248:1254  voters */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1248:1263  voters[toVoter] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1255:1262  toVoter */\n      dup5\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1248:1263  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1248:1269  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1248:1277  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1310:1320  30 seconds */\n      0x1e\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1299:1308  startTime */\n      sload(0x3)\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1299:1320  startTime+ 30 seconds */\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1292:1295  now */\n      timestamp\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1292:1321  now > (startTime+ 30 seconds) */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1288:1345  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n      iszero\n      tag_26\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1332:1342  Stage.Vote */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1324:1329  stage */\n      0x0\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1324:1342  stage = Stage.Vote */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1288:1345  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n    tag_26:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":551:552  _ */\n    tag_23:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1018:1360  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1899:2378  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1974:1996  uint8 _winningProposal */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2053:2077  uint256 winningVoteCount */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2097:2107  uint8 prop */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1944:1954  Stage.Done */\n      0x3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":533:541  reqStage */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:541  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:529  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:541  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      eq\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":516:542  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_31\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_31:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2080:2081  0 */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2053:2081  uint256 winningVoteCount = 0 */\n      swap3\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2110:2111  0 */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2097:2111  uint8 prop = 0 */\n      swap2\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2092:2330  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_33:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2120:2129  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2120:2136  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2113:2117  prop */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2113:2136  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2092:2330  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2191:2207  winningVoteCount */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2163:2172  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2173:2177  prop */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2163:2178  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2163:2188  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2163:2207  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2159:2330  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2247:2256  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2257:2261  prop */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2247:2262  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2247:2272  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2228:2272  winningVoteCount = proposals[prop].voteCount */\n      swap3\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2310:2314  prop */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2291:2314  _winningProposal = prop */\n      swap4\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2159:2330  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_38:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2138:2144  prop++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2092:2330  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_33)\n    tag_34:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2366:2367  0 */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2347:2363  winningVoteCount */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2347:2367  winningVoteCount > 0 */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":2339:2368  assert (winningVoteCount > 0) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1899:2378  function winningProposal() public validStage(Stage.Done) constant returns (uint8 _winningProposal) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1423:1891  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_14:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1543:1563  Voter storage sender */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1473:1483  Stage.Vote */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":533:541  reqStage */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:541  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:529  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":524:541  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      eq\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":516:542  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_45\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_45:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1566:1572  voters */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1566:1584  voters[msg.sender] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1573:1583  msg.sender */\n      caller\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1566:1584  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1543:1584  Voter storage sender = voters[msg.sender] */\n      swap2\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1599:1605  sender */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1599:1611  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1599:1645  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_47\n      jumpi\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1629:1638  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1629:1645  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1615:1625  toProposal */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1615:1645  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1599:1645  sender.voted || toProposal >= proposals.length */\n    tag_47:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1595:1654  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_48\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1647:1654  return; */\n      jump(tag_46)\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1595:1654  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_48:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1679:1683  true */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1664:1670  sender */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1664:1676  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1664:1683  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1708:1718  toProposal */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1694:1700  sender */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1694:1705  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1694:1718  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1767:1773  sender */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1767:1780  sender.weight */\n      0x0\n      add\n      sload\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1732:1741  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1742:1752  toProposal */\n      dup5\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1732:1753  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1732:1763  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1732:1780  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1813:1823  30 seconds */\n      0x1e\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1802:1811  startTime */\n      sload(0x3)\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1802:1823  startTime+ 30 seconds */\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1795:1798  now */\n      timestamp\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1795:1824  now > (startTime+ 30 seconds) */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1791:1866  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();} */\n      iszero\n      tag_51\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1835:1845  Stage.Done */\n      0x3\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1827:1832  stage */\n      0x0\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1827:1845  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1847:1864  votingCompleted() */\n      0x6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef035382351\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1791:1866  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();} */\n    tag_51:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":551:552  _ */\n    tag_46:\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":1423:1891  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Learning Contrats v0.4.0/BallotWithModifier.sol\":262:293  Stage public stage = Stage.Init */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058204d724d27c3adf8a9eb6ee20dff9c7733d689a67c70dc591d045e974f242a75d50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516020806107178339810180604052810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101119190610142565b5060016000806101000a81548160ff0219169083600381111561013057fe5b02179055504260038190555050610195565b81548183558181111561016957818360005260206000209182019101610168919061016e565b5b505050565b61019291905b8082111561018e5760008082016000905550600101610174565b5090565b90565b610573806101a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610303565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103c1565b005b34801561011757600080fd5b50610120610535565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b600180600381111561015257fe5b6000809054906101000a900460ff16600381111561016c57fe5b14151561017857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102215750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022b576102ff565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102fe5760026000806101000a81548160ff021916908360038111156102f857fe5b02179055505b5b5050565b6000806000600380600381111561031657fe5b6000809054906101000a900460ff16600381111561033057fe5b14151561033c57600080fd5b60009250600091505b6002805490508260ff1610156103af578260028360ff1681548110151561036857fe5b906000526020600020016000015411156103a25760028260ff1681548110151561038e57fe5b906000526020600020016000015492508193505b8180600101925050610345565b6000831115156103bb57fe5b50505090565b600060028060038111156103d157fe5b6000809054906101000a900460ff1660038111156103eb57fe5b1415156103f757600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061045d57506002805490508360ff1610155b1561046757610530565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff168154811015156104b857fe5b9060005260206000200160000160008282540192505081905550601e6003540142111561052f5760036000806101000a81548160ff021916908360038111156104fd57fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b5b505050565b6000809054906101000a900460ff16815600a165627a7a723058204d724d27c3adf8a9eb6ee20dff9c7733d689a67c70dc591d045e974f242a75d50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x717 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x195 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x169 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x192 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x573 DUP1 PUSH2 0x1A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x221 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x316 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x330 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3AF JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x368 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x38E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x3BB JUMPI INVALID JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EB JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x45D JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x467 JUMPI PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x52F JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4d PUSH19 0x4D27C3ADF8A9EB6EE20DFF9C7733D689A67C70 0xdc MSIZE SAR DIV 0x5e SWAP8 0x4f 0x24 0x2a PUSH22 0xD5002900000000000000000000000000000000000000 ",
							"sourceMap": "25:2356:0:-;;;283:10;262:31;;;;;;;;;;;;;;;;;;;;;;;;;;642:262;8:9:-1;5:2;;;30:1;27;20:12;5:2;642:262:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:10;698:11;;:24;;;;;;;;;;;;;;;;;;762:1;733:6;:19;740:11;;;;;;;;;;;733:19;;;;;;;;;;;;;;;:26;;:30;;;;829:13;810:32;;:9;:32;;;;;:::i;:::-;;861:9;853:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;893:3;881:9;:15;;;;642:262;25:2356;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610303565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103c1565b005b34801561011757600080fd5b50610120610535565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b600180600381111561015257fe5b6000809054906101000a900460ff16600381111561016c57fe5b14151561017857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102215750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022b576102ff565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102fe5760026000806101000a81548160ff021916908360038111156102f857fe5b02179055505b5b5050565b6000806000600380600381111561031657fe5b6000809054906101000a900460ff16600381111561033057fe5b14151561033c57600080fd5b60009250600091505b6002805490508260ff1610156103af578260028360ff1681548110151561036857fe5b906000526020600020016000015411156103a25760028260ff1681548110151561038e57fe5b906000526020600020016000015492508193505b8180600101925050610345565b6000831115156103bb57fe5b50505090565b600060028060038111156103d157fe5b6000809054906101000a900460ff1660038111156103eb57fe5b1415156103f757600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061045d57506002805490508360ff1610155b1561046757610530565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff168154811015156104b857fe5b9060005260206000200160000160008282540192505081905550601e6003540142111561052f5760036000806101000a81548160ff021916908360038111156104fd57fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b5b505050565b6000809054906101000a900460ff16815600a165627a7a723058204d724d27c3adf8a9eb6ee20dff9c7733d689a67c70dc591d045e974f242a75d50029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x221 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x316 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x330 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3AF JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x368 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x38E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x3BB JUMPI INVALID JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EB JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x45D JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x467 JUMPI PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x52F JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4d PUSH19 0x4D27C3ADF8A9EB6EE20DFF9C7733D689A67C70 0xdc MSIZE SAR DIV 0x5e SWAP8 0x4f 0x24 0x2a PUSH22 0xD5002900000000000000000000000000000000000000 ",
							"sourceMap": "25:2356:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:342;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1018:342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:479;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1899:479:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1423:468;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1423:468:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:342;1071:9;533:8;524:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;516:26;;;;;;;;1156:11;;;;;;;;;;;1142:25;;:10;:25;;;;:50;;;;1171:6;:15;1178:7;1171:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1142:50;1138:63;;;1194:7;;1138:63;1236:1;1211:6;:15;1218:7;1211:15;;;;;;;;;;;;;;;:22;;:26;;;;1272:5;1248:6;:15;1255:7;1248:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1310:10;1299:9;;:21;1292:3;:29;1288:57;;;1332:10;1324:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1288:57;551:1;1018:342;;:::o;1899:479::-;1974:22;2053:24;2097:10;1944;533:8;524:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;516:26;;;;;;;;2080:1;2053:28;;2110:1;2097:14;;2092:238;2120:9;:16;;;;2113:4;:23;;;2092:238;;;2191:16;2163:9;2173:4;2163:15;;;;;;;;;;;;;;;;;;;:25;;;:44;2159:171;;;2247:9;2257:4;2247:15;;;;;;;;;;;;;;;;;;;:25;;;2228:44;;2310:4;2291:23;;2159:171;2138:6;;;;;;;2092:238;;;2366:1;2347:16;:20;2339:29;;;;;;1899:479;;;;:::o;1423:468::-;1543:20;1473:10;533:8;524:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;516:26;;;;;;;;1566:6;:18;1573:10;1566:18;;;;;;;;;;;;;;;1543:41;;1599:6;:12;;;;;;;;;;;;:46;;;;1629:9;:16;;;;1615:10;:30;;;;1599:46;1595:59;;;1647:7;;1595:59;1679:4;1664:6;:12;;;:19;;;;;;;;;;;;;;;;;;1708:10;1694:6;:11;;;:24;;;;;;;;;;;;;;;;;;1767:6;:13;;;1732:9;1742:10;1732:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1813:10;1802:9;;:21;1795:3;:29;1791:75;;;1835:10;1827:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1847:17;;;;;;;;;;1791:75;551:1;1423:468;;;:::o;262:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "279000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "62191",
								"stage()": "528",
								"vote(uint8)": "83801",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "MSTORE"
								},
								{
									"begin": 283,
									"end": 293,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP1"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "EXP"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP2"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SLOAD"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP2"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "MUL"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "NOT"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "AND"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SWAP1"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP4"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP2"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "GT"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "ISZERO"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "JUMPI"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "INVALID"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "JUMPDEST"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "MUL"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "OR"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SWAP1"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SSTORE"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "POP"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "POP"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "MLOAD"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "PUSHSIZE"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP4"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "CODECOPY"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP2"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "ADD"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "MSTORE"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP2"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "ADD"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "SWAP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "DUP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "MLOAD"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "SWAP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "ADD"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "SWAP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "SWAP3"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "SWAP2"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "SWAP1"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "POP"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "POP"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "POP"
								},
								{
									"begin": 712,
									"end": 722,
									"name": "CALLER"
								},
								{
									"begin": 698,
									"end": 709,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 698,
									"end": 709,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "EXP"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "DUP2"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "SLOAD"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "DUP2"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "MUL"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "NOT"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "AND"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "SWAP1"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "DUP4"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "AND"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "MUL"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "OR"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "SWAP1"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "SSTORE"
								},
								{
									"begin": 698,
									"end": 722,
									"name": "POP"
								},
								{
									"begin": 762,
									"end": 763,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 733,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "SLOAD"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "EXP"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "DIV"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 751,
									"name": "AND"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "AND"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "AND"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "DUP2"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "MSTORE"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "ADD"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "SWAP1"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "DUP2"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "MSTORE"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "ADD"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 733,
									"end": 752,
									"name": "KECCAK256"
								},
								{
									"begin": 733,
									"end": 759,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 733,
									"end": 759,
									"name": "ADD"
								},
								{
									"begin": 733,
									"end": 763,
									"name": "DUP2"
								},
								{
									"begin": 733,
									"end": 763,
									"name": "SWAP1"
								},
								{
									"begin": 733,
									"end": 763,
									"name": "SSTORE"
								},
								{
									"begin": 733,
									"end": 763,
									"name": "POP"
								},
								{
									"begin": 829,
									"end": 842,
									"name": "DUP1"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "AND"
								},
								{
									"begin": 810,
									"end": 819,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "DUP2"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "SWAP2"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "SWAP1"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "JUMPDEST"
								},
								{
									"begin": 810,
									"end": 842,
									"name": "POP"
								},
								{
									"begin": 861,
									"end": 870,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 853,
									"end": 858,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 853,
									"end": 858,
									"name": "DUP1"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "EXP"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "DUP2"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "SLOAD"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "DUP2"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "MUL"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "NOT"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "AND"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "SWAP1"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "DUP4"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "DUP2"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "GT"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "ISZERO"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "JUMPI"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "INVALID"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "JUMPDEST"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "MUL"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "OR"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "SWAP1"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "SSTORE"
								},
								{
									"begin": 853,
									"end": 870,
									"name": "POP"
								},
								{
									"begin": 893,
									"end": 896,
									"name": "TIMESTAMP"
								},
								{
									"begin": 881,
									"end": 890,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "SSTORE"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 642,
									"end": 904,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SLOAD"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "KECCAK256"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2381,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058204d724d27c3adf8a9eb6ee20dff9c7733d689a67c70dc591d045e974f242a75d50029",
									".code": [
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2381,
											"name": "REVERT"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SUB"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "DUP2"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "ADD"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "ADD"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SWAP3"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SWAP2"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "JUMP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "STOP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "JUMP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "MLOAD"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "DUP3"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "MLOAD"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "SUB"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "RETURN"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SUB"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "DUP2"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "ADD"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "DUP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "AND"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "ADD"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SWAP3"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SWAP2"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "SWAP1"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "JUMP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "STOP"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMP"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "MLOAD"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP3"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "GT"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "ISZERO"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPI"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "INVALID"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "AND"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "ADD"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP2"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "MLOAD"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP2"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SUB"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "RETURN"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "JUMPDEST"
										},
										{
											"begin": 1071,
											"end": 1080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 533,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "GT"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "INVALID"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SLOAD"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "EXP"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DIV"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "GT"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "INVALID"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "EQ"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "JUMPI"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "REVERT"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "JUMPDEST"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "SLOAD"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "EXP"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "DIV"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1167,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "CALLER"
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 1167,
											"name": "ISZERO"
										},
										{
											"begin": 1142,
											"end": 1192,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 1192,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1142,
											"end": 1192,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 1192,
											"name": "POP"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1185,
											"name": "DUP4"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "AND"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "AND"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1186,
											"name": "KECCAK256"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "SLOAD"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "EXP"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "DIV"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1171,
											"end": 1192,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1192,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1142,
											"end": 1192,
											"name": "JUMPDEST"
										},
										{
											"begin": 1138,
											"end": 1201,
											"name": "ISZERO"
										},
										{
											"begin": 1138,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1138,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "JUMP"
										},
										{
											"begin": 1138,
											"end": 1201,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1138,
											"end": 1201,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1225,
											"name": "DUP5"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "AND"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "AND"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "DUP2"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "MSTORE"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "ADD"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "DUP2"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "MSTORE"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "ADD"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "KECCAK256"
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ADD"
										},
										{
											"begin": 1211,
											"end": 1237,
											"name": "DUP2"
										},
										{
											"begin": 1211,
											"end": 1237,
											"name": "SWAP1"
										},
										{
											"begin": 1211,
											"end": 1237,
											"name": "SSTORE"
										},
										{
											"begin": 1211,
											"end": 1237,
											"name": "POP"
										},
										{
											"begin": 1272,
											"end": 1277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1262,
											"name": "DUP5"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "KECCAK256"
										},
										{
											"begin": 1248,
											"end": 1269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1269,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "EXP"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SLOAD"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "MUL"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "NOT"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "DUP4"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "MUL"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "OR"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SSTORE"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1320,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "SLOAD"
										},
										{
											"begin": 1299,
											"end": 1320,
											"name": "ADD"
										},
										{
											"begin": 1292,
											"end": 1295,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1292,
											"end": 1321,
											"name": "GT"
										},
										{
											"begin": 1288,
											"end": 1345,
											"name": "ISZERO"
										},
										{
											"begin": 1288,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1288,
											"end": 1345,
											"name": "JUMPI"
										},
										{
											"begin": 1332,
											"end": 1342,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DUP1"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "EXP"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "SLOAD"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "MUL"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "NOT"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "AND"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "DUP4"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "GT"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "JUMPI"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "INVALID"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "MUL"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "OR"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "SSTORE"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1288,
											"end": 1345,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1288,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1360,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 533,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "GT"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "INVALID"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SLOAD"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "EXP"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DIV"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "GT"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "INVALID"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "EQ"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "JUMPI"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "REVERT"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "JUMPDEST"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2081,
											"name": "SWAP3"
										},
										{
											"begin": 2053,
											"end": 2081,
											"name": "POP"
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2111,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2111,
											"name": "POP"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "JUMPDEST"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "DUP1"
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "SLOAD"
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "SWAP1"
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "POP"
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "DUP3"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "AND"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "LT"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "ISZERO"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "JUMPI"
										},
										{
											"begin": 2191,
											"end": 2207,
											"name": "DUP3"
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "DUP4"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "AND"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "DUP2"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "SLOAD"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "DUP2"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "LT"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "ISZERO"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "ISZERO"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "JUMPI"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "INVALID"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "JUMPDEST"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "MSTORE"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "KECCAK256"
										},
										{
											"begin": 2163,
											"end": 2178,
											"name": "ADD"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ADD"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "SLOAD"
										},
										{
											"begin": 2163,
											"end": 2207,
											"name": "GT"
										},
										{
											"begin": 2159,
											"end": 2330,
											"name": "ISZERO"
										},
										{
											"begin": 2159,
											"end": 2330,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2159,
											"end": 2330,
											"name": "JUMPI"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2257,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "AND"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "DUP2"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "SLOAD"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "DUP2"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "LT"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "ISZERO"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "ISZERO"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "JUMPI"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "INVALID"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "MSTORE"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "KECCAK256"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "ADD"
										},
										{
											"begin": 2247,
											"end": 2272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2272,
											"name": "ADD"
										},
										{
											"begin": 2247,
											"end": 2272,
											"name": "SLOAD"
										},
										{
											"begin": 2228,
											"end": 2272,
											"name": "SWAP3"
										},
										{
											"begin": 2228,
											"end": 2272,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "DUP2"
										},
										{
											"begin": 2291,
											"end": 2314,
											"name": "SWAP4"
										},
										{
											"begin": 2291,
											"end": 2314,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2330,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2159,
											"end": 2330,
											"name": "JUMPDEST"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP2"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP1"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "ADD"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "SWAP3"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "POP"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "POP"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "JUMP"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2092,
											"end": 2330,
											"name": "JUMPDEST"
										},
										{
											"begin": 2366,
											"end": 2367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2363,
											"name": "DUP4"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "GT"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "ISZERO"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "ISZERO"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "JUMPI"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "INVALID"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "JUMPDEST"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 1899,
											"end": 2378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "JUMPDEST"
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1483,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 533,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "GT"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "INVALID"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SLOAD"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "EXP"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DIV"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "GT"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "INVALID"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 541,
											"name": "EQ"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "JUMPI"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "REVERT"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "JUMPDEST"
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1583,
											"name": "CALLER"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "AND"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "AND"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "DUP2"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "MSTORE"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "ADD"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "SWAP1"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "DUP2"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "MSTORE"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "ADD"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "KECCAK256"
										},
										{
											"begin": 1543,
											"end": 1584,
											"name": "SWAP2"
										},
										{
											"begin": 1543,
											"end": 1584,
											"name": "POP"
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "ADD"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP1"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SLOAD"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP1"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "EXP"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "SWAP1"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "DIV"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "AND"
										},
										{
											"begin": 1599,
											"end": 1645,
											"name": "DUP1"
										},
										{
											"begin": 1599,
											"end": 1645,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1599,
											"end": 1645,
											"name": "JUMPI"
										},
										{
											"begin": 1599,
											"end": 1645,
											"name": "POP"
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1629,
											"end": 1645,
											"name": "DUP1"
										},
										{
											"begin": 1629,
											"end": 1645,
											"name": "SLOAD"
										},
										{
											"begin": 1629,
											"end": 1645,
											"name": "SWAP1"
										},
										{
											"begin": 1629,
											"end": 1645,
											"name": "POP"
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "DUP4"
										},
										{
											"begin": 1615,
											"end": 1645,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1615,
											"end": 1645,
											"name": "AND"
										},
										{
											"begin": 1615,
											"end": 1645,
											"name": "LT"
										},
										{
											"begin": 1615,
											"end": 1645,
											"name": "ISZERO"
										},
										{
											"begin": 1599,
											"end": 1645,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1599,
											"end": 1645,
											"name": "JUMPDEST"
										},
										{
											"begin": 1595,
											"end": 1654,
											"name": "ISZERO"
										},
										{
											"begin": 1595,
											"end": 1654,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1595,
											"end": 1654,
											"name": "JUMPI"
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "JUMP"
										},
										{
											"begin": 1595,
											"end": 1654,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1595,
											"end": 1654,
											"name": "JUMPDEST"
										},
										{
											"begin": 1679,
											"end": 1683,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP3"
										},
										{
											"begin": 1664,
											"end": 1676,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1664,
											"end": 1676,
											"name": "ADD"
										},
										{
											"begin": 1664,
											"end": 1676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "EXP"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "SLOAD"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "MUL"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "NOT"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "AND"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "DUP4"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "ISZERO"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "ISZERO"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "MUL"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "OR"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "SSTORE"
										},
										{
											"begin": 1664,
											"end": 1683,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 1718,
											"name": "DUP3"
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP3"
										},
										{
											"begin": 1694,
											"end": 1705,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1694,
											"end": 1705,
											"name": "ADD"
										},
										{
											"begin": 1694,
											"end": 1705,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "EXP"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SLOAD"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "MUL"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "NOT"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "AND"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP4"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "AND"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "MUL"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "OR"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SSTORE"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP2"
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "ADD"
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "SLOAD"
										},
										{
											"begin": 1732,
											"end": 1741,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1742,
											"end": 1752,
											"name": "DUP5"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "AND"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "SLOAD"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "LT"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "ISZERO"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "ISZERO"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "JUMPI"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "INVALID"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "KECCAK256"
										},
										{
											"begin": 1732,
											"end": 1753,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1763,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "DUP3"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "DUP3"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "SLOAD"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "SSTORE"
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "SLOAD"
										},
										{
											"begin": 1802,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1795,
											"end": 1798,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1795,
											"end": 1824,
											"name": "GT"
										},
										{
											"begin": 1791,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1791,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1791,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1827,
											"end": 1832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1832,
											"name": "DUP1"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "EXP"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "DUP2"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SLOAD"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "DUP2"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "MUL"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "NOT"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "AND"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "DUP4"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "DUP2"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "GT"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ISZERO"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "JUMPI"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "INVALID"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "JUMPDEST"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "MUL"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "OR"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SSTORE"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "PUSH",
											"value": "6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "MLOAD"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "MLOAD"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "DUP1"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "SWAP2"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "SUB"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "SWAP1"
										},
										{
											"begin": 1847,
											"end": 1864,
											"name": "LOG1"
										},
										{
											"begin": 1791,
											"end": 1866,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1791,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "JUMPDEST"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1891,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SLOAD"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "EXP"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DIV"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "AND"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"votingCompleted\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"Learning Contrats v0.4.0/BallotWithModifier.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Learning Contrats v0.4.0/BallotWithModifier.sol\":{\"keccak256\":\"0xc61f3bf30e282aa737985d18e015c9eba9d6fd0bfd76c4daf5e05e4f97db02d4\",\"urls\":[\"bzzr://5bff875a41426bcab62d774082b412ade2e7174a6cb6aa4de6e3648b9d3b2b4d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Learning Contrats v0.4.0/BallotWithModifier.sol:31:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ballot(uint8 _numProposals) public  {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 904,
					"file": "Learning Contrats v0.4.0/BallotWithModifier.sol",
					"start": 642
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Learning Contrats v0.4.0/BallotWithModifier.sol:57:65: Warning: Invoking events without \"emit\" prefix is deprecated.\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Done; votingCompleted();}        \r\n                                                                ^---------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1864,
					"file": "Learning Contrats v0.4.0/BallotWithModifier.sol",
					"start": 1847
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Learning Contrats v0.4.0/BallotWithModifier.sol": {
				"ast": {
					"absolutePath": "Learning Contrats v0.4.0/BallotWithModifier.sol",
					"exportedSymbols": {
						"Ballot": [
							242
						]
					},
					"id": 243,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "74:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "74:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "96:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "96:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "117:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "117:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "delegate",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "138:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "138:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 242,
									"src": "50:112:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 12,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "195:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "195:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 242,
									"src": "168:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 18,
									"members": [
										{
											"id": 14,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "235:4:0"
										},
										{
											"id": 15,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "240:3:0"
										},
										{
											"id": 16,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 17,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "251:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "223:33:0"
								},
								{
									"constant": false,
									"id": 22,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "262:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$18",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 19,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 18,
										"src": "262:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$18",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 20,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 18,
											"src": "283:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "283:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$18",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "306:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "332:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "340:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "332:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 26,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 10,
											"src": "351:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "371:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 29,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "371:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$13_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 30,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "371:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 33,
									"name": "votingCompleted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:2:0"
									},
									"src": "400:24:0"
								},
								{
									"constant": false,
									"id": 35,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "436:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "436:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "514:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$18",
																"typeString": "enum Ballot.Stage"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "524:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "reqStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "533:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"src": "524:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260,
															261
														],
														"referencedDeclaration": 260,
														"src": "516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "516:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "516:26:0"
											},
											{
												"id": 45,
												"nodeType": "PlaceholderStatement",
												"src": "551:1:0"
											}
										]
									},
									"documentation": null,
									"id": 47,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "reqStage",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "493:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$18",
													"typeString": "enum Ballot.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 36,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 18,
													"src": "493:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "492:16:0"
									},
									"src": "473:87:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "687:217:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 52,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "698:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 53,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "712:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "712:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "698:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "698:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "733:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 59,
															"indexExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "740:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "733:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "733:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "762:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "733:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "733:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 64,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "810:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "810:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "829:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "810:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "810:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 70,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 71,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "861:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "861:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$18",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "853:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "853:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "881:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 76,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "893:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "881:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "881:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 80,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "658:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 48,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "658:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "657:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:0"
									},
									"scope": 242,
									"src": "642:262:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1082:278:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 89,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "1142:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 91,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1156:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1142:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 93,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1171:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 95,
															"indexExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1178:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1171:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1171:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1142:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 99,
												"nodeType": "IfStatement",
												"src": "1138:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 88,
													"id": 98,
													"nodeType": "Return",
													"src": "1194:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1211:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 102,
															"indexExpression": {
																"argumentTypes": null,
																"id": 101,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1218:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1211:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1211:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1236:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1211:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1211:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 107,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1248:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 109,
															"indexExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1255:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1248:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1248:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1272:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1248:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1248:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1292:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 115,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1299:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1310:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1299:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1298:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1292:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 126,
												"nodeType": "IfStatement",
												"src": "1288:57:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "1323:22:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1324:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 121,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1332:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1332:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1324:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1324:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 128,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 85,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1071:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1071:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 87,
											"modifierName": {
												"argumentTypes": null,
												"id": 84,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1060:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1060:21:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1035:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:0"
									},
									"scope": 242,
									"src": "1018:342:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1486:405:0",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "1543:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 137,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "1543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1566:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$10_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 142,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 140,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1573:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1573:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1566:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$10_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1543:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 144,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1599:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 146,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 147,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1629:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1629:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1615:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1599:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 152,
												"nodeType": "IfStatement",
												"src": "1595:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 136,
													"id": 151,
													"nodeType": "Return",
													"src": "1647:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 153,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1664:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1679:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1664:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1664:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 159,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1694:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1694:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 162,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1708:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1694:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1694:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1732:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1742:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1732:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$13_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "1732:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 169,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$10_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1767:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1732:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1732:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1795:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1802:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1813:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1802:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1801:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1795:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 188,
												"nodeType": "IfStatement",
												"src": "1791:75:0",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "1826:40:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 179,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 180,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1835:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1835:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$18",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1827:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$18",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 183,
															"nodeType": "ExpressionStatement",
															"src": "1827:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "votingCompleted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1847:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1847:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "1847:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 190,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 133,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1473:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1473:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 135,
											"modifierName": {
												"argumentTypes": null,
												"id": 132,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1462:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1462:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1437:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 129,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1436:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1486:0:0"
									},
									"scope": 242,
									"src": "1423:468:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1998:380:0",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2053:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2080:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2053:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 214,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "2163:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 216,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 215,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "2173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2163:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$13_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 12,
															"src": "2163:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 218,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2191:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2163:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 232,
													"nodeType": "IfStatement",
													"src": "2159:171:0",
													"trueBody": {
														"id": 231,
														"nodeType": "Block",
														"src": "2209:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 220,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 200,
																		"src": "2228:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 221,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "2247:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 223,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 222,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "2257:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2247:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$13_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 12,
																		"src": "2247:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2228:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 226,
																"nodeType": "ExpressionStatement",
																"src": "2228:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 227,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "2291:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 228,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "2310:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2291:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 230,
																"nodeType": "ExpressionStatement",
																"src": "2291:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 207,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2113:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 208,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2120:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$13_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2120:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2113:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"initializationExpression": {
													"assignments": [
														204
													],
													"declarations": [
														{
															"constant": false,
															"id": 204,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 241,
															"src": "2097:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 203,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2097:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 206,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2097:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2138:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 211,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "2138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 213,
													"nodeType": "ExpressionStatement",
													"src": "2138:6:0"
												},
												"nodeType": "ForStatement",
												"src": "2092:238:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 235,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2347:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2347:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 234,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2339:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "2339:29:0"
											}
										]
									},
									"documentation": null,
									"id": 241,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 193,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1944:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$18_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1944:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$18",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 195,
											"modifierName": {
												"argumentTypes": null,
												"id": 192,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1933:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$18_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1933:22:0"
										}
									],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1923:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1974:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 196,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1974:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1973:24:0"
									},
									"scope": 242,
									"src": "1899:479:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 243,
							"src": "25:2356:0"
						}
					],
					"src": "0:2389:0"
				},
				"id": 0
			}
		}
	}
}