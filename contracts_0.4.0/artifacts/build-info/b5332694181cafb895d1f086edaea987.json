{
	"id": "b5332694181cafb895d1f086edaea987",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"Learning Contrats v0.4.0/BallotWithStages.sol": {
				"content": "pragma solidity ^0.4.0;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount;\r\n    }\r\n\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    \r\n    Stage public stage = Stage.Init;\r\n    \r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    \r\n    uint startTime;   \r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    function Ballot(uint8 _numProposals) public  {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public {\r\n        if (stage != Stage.Reg) {return;}\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false;\r\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;}        \r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public  {\r\n        if (stage != Stage.Vote) {return;}\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;   \r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Done;}        \r\n        \r\n    }\r\n\r\n    function winningProposal() public constant returns (uint8 _winningProposal) {\r\n       if(stage != Stage.Done) {return;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n       \r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Learning Contrats v0.4.0/BallotWithStages.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":25:2115  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":264:274  Stage.Init */\n  0x0\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":243:274  Stage public stage = Stage.Init */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":485:747  function Ballot(uint8 _numProposals) public  {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":485:747  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":555:565  msg.sender */\n  caller\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":541:552  chairperson */\n  0x0\n  0x1\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":541:565  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":605:606  2 */\n  0x2\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":576:582  voters */\n  0x1\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":576:595  voters[chairperson] */\n  0x0\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":583:594  chairperson */\n  dup1\n  0x1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":576:595  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":576:602  voters[chairperson].weight */\n  0x0\n  add\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":576:606  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":672:685  _numProposals */\n  dup1\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":653:685  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":653:662  proposals */\n  0x2\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":653:685  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  jump\t// in(tag_6)\ntag_5:\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":704:713  Stage.Reg */\n  0x1\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":696:701  stage */\n  0x0\n  dup1\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":696:713  stage = Stage.Reg */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":736:739  now */\n  timestamp\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":724:733  startTime */\n  0x3\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":724:739  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":485:747  function Ballot(uint8 _numProposals) public  {\r... */\n  pop\n    /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":25:2115  contract Ballot {\r... */\n  jump(tag_8)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\ntag_9:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":25:2115  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":861:1195  function register(address toVoter) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":861:1195  function register(address toVoter) public {\r... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1690:2112  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1690:2112  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1258:1682  function vote(uint8 toProposal) public  {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1258:1682  function vote(uint8 toProposal) public  {\r... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":243:274  Stage public stage = Stage.Init */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":243:274  Stage public stage = Stage.Init */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":861:1195  function register(address toVoter) public {\r... */\n    tag_8:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":927:936  Stage.Reg */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":918:936  stage != Stage.Reg */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":918:923  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":918:936  stage != Stage.Reg */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      eq\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":914:947  if (stage != Stage.Reg) {return;} */\n      iszero\n      tag_22\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":939:946  return; */\n      jump(tag_19)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":914:947  if (stage != Stage.Reg) {return;} */\n    tag_22:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":975:986  chairperson */\n      0x0\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":961:986  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":961:971  msg.sender */\n      caller\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":961:986  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":961:1011  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":990:996  voters */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":990:1005  voters[toVoter] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":997:1004  toVoter */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":990:1005  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":990:1011  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":961:1011  msg.sender != chairperson || voters[toVoter].voted */\n    tag_23:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":957:1020  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_24\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1013:1020  return; */\n      jump(tag_19)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":957:1020  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_24:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1055:1056  1 */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1030:1036  voters */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1030:1045  voters[toVoter] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1037:1044  toVoter */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1030:1045  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1030:1052  voters[toVoter].weight */\n      0x0\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1030:1056  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1091:1096  false */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1067:1073  voters */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1067:1082  voters[toVoter] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1074:1081  toVoter */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1067:1082  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1067:1088  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1067:1096  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1129:1139  10 seconds */\n      0xa\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1118:1127  startTime */\n      sload(0x3)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1118:1139  startTime+ 10 seconds */\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1111:1114  now */\n      timestamp\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1111:1140  now > (startTime+ 10 seconds) */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1107:1180  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n      iszero\n      tag_25\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1151:1161  Stage.Vote */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1143:1148  stage */\n      0x0\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1143:1161  stage = Stage.Vote */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1175:1178  now */\n      timestamp\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1163:1172  startTime */\n      0x3\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1163:1178  startTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1107:1180  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n    tag_25:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":861:1195  function register(address toVoter) public {\r... */\n    tag_19:\n      pop\n      jump\t// out\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1690:2112  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1742:1764  uint8 _winningProposal */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1819:1843  uint256 winningVoteCount */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1863:1873  uint8 prop */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1788:1798  Stage.Done */\n      0x3\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1779:1798  stage != Stage.Done */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1779:1784  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1779:1798  stage != Stage.Done */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      eq\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1776:1809  if(stage != Stage.Done) {return;} */\n      iszero\n      tag_30\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1801:1808  return; */\n      jump(tag_27)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1776:1809  if(stage != Stage.Done) {return;} */\n    tag_30:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1846:1847  0 */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1819:1847  uint256 winningVoteCount = 0 */\n      swap2\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1876:1877  0 */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1863:1877  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1858:2096  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_31:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1886:1895  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1886:1902  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1879:1883  prop */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1879:1902  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1858:2096  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_32\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1957:1973  winningVoteCount */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1929:1938  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1939:1943  prop */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1929:1944  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1929:1954  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1929:1973  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1925:2096  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":2013:2022  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":2023:2027  prop */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":2013:2028  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":2013:2038  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1994:2038  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":2076:2080  prop */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":2057:2080  _winningProposal = prop */\n      swap3\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1925:2096  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_36:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1904:1910  prop++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1858:2096  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_31)\n    tag_32:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1690:2112  function winningProposal() public constant returns (uint8 _winningProposal) {\r... */\n    tag_27:\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1258:1682  function vote(uint8 toProposal) public  {\r... */\n    tag_14:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1353:1373  Voter storage sender */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1322:1332  Stage.Vote */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1313:1332  stage != Stage.Vote */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1313:1318  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1313:1332  stage != Stage.Vote */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      eq\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1309:1343  if (stage != Stage.Vote) {return;} */\n      iszero\n      tag_42\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1335:1342  return; */\n      jump(tag_39)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1309:1343  if (stage != Stage.Vote) {return;} */\n    tag_42:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1376:1382  voters */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1376:1394  voters[msg.sender] */\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1383:1393  msg.sender */\n      caller\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1376:1394  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1353:1394  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1409:1415  sender */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1409:1421  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1409:1455  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_43\n      jumpi\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1439:1448  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1439:1455  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1425:1435  toProposal */\n      dup3\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1425:1455  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1409:1455  sender.voted || toProposal >= proposals.length */\n    tag_43:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1405:1464  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_44\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1457:1464  return; */\n      jump(tag_39)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1405:1464  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_44:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1489:1493  true */\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1474:1480  sender */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1474:1486  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1474:1493  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1518:1528  toProposal */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1504:1510  sender */\n      dup2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1504:1515  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1504:1528  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1577:1583  sender */\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1577:1590  sender.weight */\n      0x0\n      add\n      sload\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1542:1551  proposals */\n      0x2\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1552:1562  toProposal */\n      dup4\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1542:1563  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_45\n      jumpi\n      invalid\n    tag_45:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1542:1573  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1542:1590  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1623:1633  10 seconds */\n      0xa\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1612:1621  startTime */\n      sload(0x3)\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1612:1633  startTime+ 10 seconds */\n      add\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1605:1608  now */\n      timestamp\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1605:1634  now > (startTime+ 10 seconds) */\n      gt\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1601:1657  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n      iszero\n      tag_47\n      jumpi\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1645:1655  Stage.Done */\n      0x3\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1637:1642  stage */\n      0x0\n      dup1\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1637:1655  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1601:1657  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n    tag_47:\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":1258:1682  function vote(uint8 toProposal) public  {\r... */\n    tag_39:\n      pop\n      pop\n      jump\t// out\n        /* \"Learning Contrats v0.4.0/BallotWithStages.sol\":243:274  Stage public stage = Stage.Init */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058208ee799b58d48df19cdb3fc1420cfb6c03f37ec29e5ef409f9582bd29d12222f80029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516020806106e08339810180604052810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101119190610142565b5060016000806101000a81548160ff0219169083600381111561013057fe5b02179055504260038190555050610195565b81548183558181111561016957818360005260206000209182019101610168919061016e565b5b505050565b61019291905b8082111561018e5760008082016000905550600101610174565b5090565b90565b61053c806101a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610308565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103b8565b005b34801561011757600080fd5b506101206104fe565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b6001600381111561015157fe5b6000809054906101000a900460ff16600381111561016b57fe5b14151561017757610305565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102205750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022a57610305565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156103045760026000806101000a81548160ff021916908360038111156102f757fe5b0217905550426003819055505b5b50565b600080600060038081111561031957fe5b6000809054906101000a900460ff16600381111561033357fe5b14151561033f576103b3565b60009150600090505b6002805490508160ff1610156103b2578160028260ff1681548110151561036b57fe5b906000526020600020016000015411156103a55760028160ff1681548110151561039157fe5b906000526020600020016000015491508092505b8080600101915050610348565b5b505090565b6000600260038111156103c757fe5b6000809054906101000a900460ff1660038111156103e157fe5b1415156103ed576104fa565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061045357506002805490508260ff1610155b1561045d576104fa565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811015156104ae57fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104f95760036000806101000a81548160ff021916908360038111156104f357fe5b02179055505b5b5050565b6000809054906101000a900460ff16815600a165627a7a723058208ee799b58d48df19cdb3fc1420cfb6c03f37ec29e5ef409f9582bd29d12222f80029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x6E0 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x195 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x169 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x192 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x53C DUP1 PUSH2 0x1A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x177 JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22A JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x304 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x319 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x333 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x3B2 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x391 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x348 JUMP JUMPDEST JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3ED JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x453 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x45D JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 0xe7 SWAP10 0xb5 DUP14 0x48 0xdf NOT 0xcd 0xb3 0xfc EQ KECCAK256 0xcf 0xb6 0xc0 0x3f CALLDATACOPY 0xec 0x29 0xe5 0xef BLOCKHASH SWAP16 SWAP6 DUP3 0xbd 0x29 0xd1 0x22 0x22 0xf8 STOP 0x29 ",
							"sourceMap": "25:2090:0:-;;;264:10;243:31;;;;;;;;;;;;;;;;;;;;;;;;;;485:262;8:9:-1;5:2;;;30:1;27;20:12;5:2;485:262:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:10;541:11;;:24;;;;;;;;;;;;;;;;;;605:1;576:6;:19;583:11;;;;;;;;;;;576:19;;;;;;;;;;;;;;;:26;;:30;;;;672:13;653:32;;:9;:32;;;;;:::i;:::-;;704:9;696:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;736:3;724:9;:15;;;;485:262;25:2090;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf610308565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103b8565b005b34801561011757600080fd5b506101206104fe565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b6001600381111561015157fe5b6000809054906101000a900460ff16600381111561016b57fe5b14151561017757610305565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102205750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022a57610305565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156103045760026000806101000a81548160ff021916908360038111156102f757fe5b0217905550426003819055505b5b50565b600080600060038081111561031957fe5b6000809054906101000a900460ff16600381111561033357fe5b14151561033f576103b3565b60009150600090505b6002805490508160ff1610156103b2578160028260ff1681548110151561036b57fe5b906000526020600020016000015411156103a55760028160ff1681548110151561039157fe5b906000526020600020016000015491508092505b8080600101915050610348565b5b505090565b6000600260038111156103c757fe5b6000809054906101000a900460ff1660038111156103e157fe5b1415156103ed576104fa565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061045357506002805490508260ff1610155b1561045d576104fa565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811015156104ae57fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104f95760036000806101000a81548160ff021916908360038111156104f357fe5b02179055505b5b5050565b6000809054906101000a900460ff16815600a165627a7a723058208ee799b58d48df19cdb3fc1420cfb6c03f37ec29e5ef409f9582bd29d12222f80029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x177 JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22A JUMPI PUSH2 0x305 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x304 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x319 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x333 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x3B2 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x391 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x348 JUMP JUMPDEST JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3ED JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x453 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x45D JUMPI PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 0xe7 SWAP10 0xb5 DUP14 0x48 0xdf NOT 0xcd 0xb3 0xfc EQ KECCAK256 0xcf 0xb6 0xc0 0x3f CALLDATACOPY 0xec 0x29 0xe5 0xef BLOCKHASH SWAP16 SWAP6 DUP3 0xbd 0x29 0xd1 0x22 0x22 0xf8 STOP 0x29 ",
							"sourceMap": "25:2090:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:334;;8:9:-1;5:2;;;30:1;27;20:12;5:2;861:334:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:422;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1690:422:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:424;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1258:424:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;243:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:334;927:9;918:18;;;;;;;;:5;;;;;;;;;;;:18;;;;;;;;;;914:33;;;939:7;;914:33;975:11;;;;;;;;;;;961:25;;:10;:25;;;;:50;;;;990:6;:15;997:7;990:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;961:50;957:63;;;1013:7;;957:63;1055:1;1030:6;:15;1037:7;1030:15;;;;;;;;;;;;;;;:22;;:26;;;;1091:5;1067:6;:15;1074:7;1067:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1129:10;1118:9;;:21;1111:3;:29;1107:73;;;1151:10;1143:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1175:3;1163:9;:15;;;;1107:73;861:334;;:::o;1690:422::-;1742:22;1819:24;1863:10;1788;1779:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;;1776:33;;;1801:7;;1776:33;1846:1;1819:28;;1876:1;1863:14;;1858:238;1886:9;:16;;;;1879:4;:23;;;1858:238;;;1957:16;1929:9;1939:4;1929:15;;;;;;;;;;;;;;;;;;;:25;;;:44;1925:171;;;2013:9;2023:4;2013:15;;;;;;;;;;;;;;;;;;;:25;;;1994:44;;2076:4;2057:23;;1925:171;1904:6;;;;;;;1858:238;;;1690:422;;;;:::o;1258:424::-;1353:20;1322:10;1313:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;;1309:34;;;1335:7;;1309:34;1376:6;:18;1383:10;1376:18;;;;;;;;;;;;;;;1353:41;;1409:6;:12;;;;;;;;;;;;:46;;;;1439:9;:16;;;;1425:10;:30;;;;1409:46;1405:59;;;1457:7;;1405:59;1489:4;1474:6;:12;;;:19;;;;;;;;;;;;;;;;;;1518:10;1504:6;:11;;;:24;;;;;;;;;;;;;;;;;;1577:6;:13;;;1542:9;1552:10;1542:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1623:10;1612:9;;:21;1605:3;:29;1601:56;;;1645:10;1637:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1601:56;1258:424;;;:::o;243:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "82199",
								"stage()": "528",
								"vote(uint8)": "83019",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "DUP1"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "EXP"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "SLOAD"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "MUL"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "NOT"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "AND"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "SWAP1"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "DUP4"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "GT"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "ISZERO"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "JUMPI"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "INVALID"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "JUMPDEST"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "MUL"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "OR"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "SWAP1"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "SSTORE"
								},
								{
									"begin": 243,
									"end": 274,
									"name": "POP"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "POP"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "MLOAD"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "PUSHSIZE"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP4"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "CODECOPY"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP2"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "ADD"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "MSTORE"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP2"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "ADD"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "SWAP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "DUP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "MLOAD"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "SWAP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "ADD"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "SWAP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "SWAP3"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "SWAP2"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "SWAP1"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "POP"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "POP"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "POP"
								},
								{
									"begin": 555,
									"end": 565,
									"name": "CALLER"
								},
								{
									"begin": 541,
									"end": 552,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 541,
									"end": 552,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "EXP"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "DUP2"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "SLOAD"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "DUP2"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "MUL"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "NOT"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "AND"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "SWAP1"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "DUP4"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "AND"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "MUL"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "OR"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "SWAP1"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "SSTORE"
								},
								{
									"begin": 541,
									"end": 565,
									"name": "POP"
								},
								{
									"begin": 605,
									"end": 606,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 576,
									"end": 582,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "DUP1"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "SWAP1"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "SLOAD"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "SWAP1"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "EXP"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "SWAP1"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "DIV"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 583,
									"end": 594,
									"name": "AND"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "AND"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "AND"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "DUP2"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "MSTORE"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "ADD"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "SWAP1"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "DUP2"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "MSTORE"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "ADD"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 576,
									"end": 595,
									"name": "KECCAK256"
								},
								{
									"begin": 576,
									"end": 602,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 576,
									"end": 602,
									"name": "ADD"
								},
								{
									"begin": 576,
									"end": 606,
									"name": "DUP2"
								},
								{
									"begin": 576,
									"end": 606,
									"name": "SWAP1"
								},
								{
									"begin": 576,
									"end": 606,
									"name": "SSTORE"
								},
								{
									"begin": 576,
									"end": 606,
									"name": "POP"
								},
								{
									"begin": 672,
									"end": 685,
									"name": "DUP1"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "AND"
								},
								{
									"begin": 653,
									"end": 662,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "DUP2"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "SWAP2"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "SWAP1"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "JUMPDEST"
								},
								{
									"begin": 653,
									"end": 685,
									"name": "POP"
								},
								{
									"begin": 704,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 696,
									"end": 701,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 696,
									"end": 701,
									"name": "DUP1"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "EXP"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "SLOAD"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "MUL"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "NOT"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "AND"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "DUP4"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "GT"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "ISZERO"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "JUMPI"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "INVALID"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "JUMPDEST"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "MUL"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "OR"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "SSTORE"
								},
								{
									"begin": 696,
									"end": 713,
									"name": "POP"
								},
								{
									"begin": 736,
									"end": 739,
									"name": "TIMESTAMP"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "DUP2"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "SSTORE"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "POP"
								},
								{
									"begin": 485,
									"end": 747,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SLOAD"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "KECCAK256"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2115,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208ee799b58d48df19cdb3fc1420cfb6c03f37ec29e5ef409f9582bd29d12222f80029",
									".code": [
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2115,
											"name": "REVERT"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "JUMPDEST"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "POP"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "DUP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SUB"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "DUP2"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "ADD"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SWAP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "DUP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "DUP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "AND"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SWAP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "ADD"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SWAP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SWAP3"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SWAP2"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "SWAP1"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "POP"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "POP"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "POP"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "JUMP"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "JUMPDEST"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "STOP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "JUMP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "MLOAD"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "DUP1"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "DUP3"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "AND"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "AND"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "DUP2"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "MSTORE"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "ADD"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "SWAP2"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "MLOAD"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "DUP1"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "SWAP2"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "SUB"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "SWAP1"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "RETURN"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SUB"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "DUP2"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "ADD"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "AND"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "ADD"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SWAP3"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SWAP2"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "JUMP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "STOP"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMP"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "GT"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "ISZERO"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "INVALID"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "RETURN"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "DUP2"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "GT"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ISZERO"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "JUMPI"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "INVALID"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "JUMPDEST"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "SLOAD"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "EXP"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "DIV"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "AND"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "DUP2"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "GT"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ISZERO"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "JUMPI"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "INVALID"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "JUMPDEST"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "EQ"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ISZERO"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 939,
											"end": 946,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 939,
											"end": 946,
											"name": "JUMP"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "SLOAD"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "EXP"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "DIV"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "AND"
										},
										{
											"begin": 961,
											"end": 986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 961,
											"end": 986,
											"name": "AND"
										},
										{
											"begin": 961,
											"end": 971,
											"name": "CALLER"
										},
										{
											"begin": 961,
											"end": 986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 961,
											"end": 986,
											"name": "AND"
										},
										{
											"begin": 961,
											"end": 986,
											"name": "EQ"
										},
										{
											"begin": 961,
											"end": 986,
											"name": "ISZERO"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "JUMPI"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 990,
											"end": 996,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1004,
											"name": "DUP3"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "AND"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "AND"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "DUP2"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "MSTORE"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "ADD"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "DUP2"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "MSTORE"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "ADD"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1005,
											"name": "KECCAK256"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "EXP"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "DIV"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 990,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 961,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 957,
											"end": 1020,
											"name": "ISZERO"
										},
										{
											"begin": 957,
											"end": 1020,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 957,
											"end": 1020,
											"name": "JUMPI"
										},
										{
											"begin": 1013,
											"end": 1020,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1013,
											"end": 1020,
											"name": "JUMP"
										},
										{
											"begin": 957,
											"end": 1020,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 957,
											"end": 1020,
											"name": "JUMPDEST"
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP4"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "AND"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "AND"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "MSTORE"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "ADD"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "MSTORE"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "ADD"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1045,
											"name": "KECCAK256"
										},
										{
											"begin": 1030,
											"end": 1052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1052,
											"name": "ADD"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "SSTORE"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "DUP4"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "KECCAK256"
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "EXP"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "SLOAD"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "MUL"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "NOT"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "DUP4"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "ISZERO"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "ISZERO"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "MUL"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "OR"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "SSTORE"
										},
										{
											"begin": 1067,
											"end": 1096,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1118,
											"end": 1127,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1118,
											"end": 1127,
											"name": "SLOAD"
										},
										{
											"begin": 1118,
											"end": 1139,
											"name": "ADD"
										},
										{
											"begin": 1111,
											"end": 1114,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1111,
											"end": 1140,
											"name": "GT"
										},
										{
											"begin": 1107,
											"end": 1180,
											"name": "ISZERO"
										},
										{
											"begin": 1107,
											"end": 1180,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1107,
											"end": 1180,
											"name": "JUMPI"
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1143,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1148,
											"name": "DUP1"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "EXP"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "DUP2"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "SLOAD"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "DUP2"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "MUL"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "NOT"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "AND"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "SWAP1"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "DUP4"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "DUP2"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "GT"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "ISZERO"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMPI"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "INVALID"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMPDEST"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "MUL"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "OR"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "SWAP1"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "SSTORE"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1178,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "DUP2"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "SSTORE"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1180,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1107,
											"end": 1180,
											"name": "JUMPDEST"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "JUMPDEST"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "POP"
										},
										{
											"begin": 861,
											"end": 1195,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1742,
											"end": 1764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1843,
											"name": "DUP1"
										},
										{
											"begin": 1863,
											"end": 1873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "DUP1"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "DUP2"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "GT"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "ISZERO"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "JUMPI"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "INVALID"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "JUMPDEST"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "DUP1"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "SLOAD"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "EXP"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "DIV"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "AND"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "DUP2"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "GT"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "ISZERO"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "JUMPI"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "INVALID"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "JUMPDEST"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "EQ"
										},
										{
											"begin": 1779,
											"end": 1798,
											"name": "ISZERO"
										},
										{
											"begin": 1776,
											"end": 1809,
											"name": "ISZERO"
										},
										{
											"begin": 1776,
											"end": 1809,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1776,
											"end": 1809,
											"name": "JUMPI"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "JUMP"
										},
										{
											"begin": 1776,
											"end": 1809,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1776,
											"end": 1809,
											"name": "JUMPDEST"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1847,
											"name": "SWAP2"
										},
										{
											"begin": 1819,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1877,
											"name": "SWAP1"
										},
										{
											"begin": 1863,
											"end": 1877,
											"name": "POP"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "JUMPDEST"
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "SLOAD"
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "DUP2"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "AND"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "LT"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "ISZERO"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "JUMPI"
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1939,
											"end": 1943,
											"name": "DUP3"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "AND"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "DUP2"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "SLOAD"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "DUP2"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "LT"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "ISZERO"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "ISZERO"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "JUMPI"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "INVALID"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "JUMPDEST"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "SWAP1"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "MSTORE"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "KECCAK256"
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "ADD"
										},
										{
											"begin": 1929,
											"end": 1954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1929,
											"end": 1954,
											"name": "SLOAD"
										},
										{
											"begin": 1929,
											"end": 1973,
											"name": "GT"
										},
										{
											"begin": 1925,
											"end": 2096,
											"name": "ISZERO"
										},
										{
											"begin": 1925,
											"end": 2096,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1925,
											"end": 2096,
											"name": "JUMPI"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "AND"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SLOAD"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "LT"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "ISZERO"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "ISZERO"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "JUMPI"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "INVALID"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "JUMPDEST"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "SWAP1"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "MSTORE"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "KECCAK256"
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "ADD"
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "ADD"
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "SLOAD"
										},
										{
											"begin": 1994,
											"end": 2038,
											"name": "SWAP2"
										},
										{
											"begin": 1994,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "DUP1"
										},
										{
											"begin": 2057,
											"end": 2080,
											"name": "SWAP3"
										},
										{
											"begin": 2057,
											"end": 2080,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 2096,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1925,
											"end": 2096,
											"name": "JUMPDEST"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "ADD"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "POP"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "JUMP"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1858,
											"end": 2096,
											"name": "JUMPDEST"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "SWAP1"
										},
										{
											"begin": 1690,
											"end": 2112,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "GT"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "ISZERO"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "JUMPI"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "INVALID"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "SLOAD"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "EXP"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "DIV"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "GT"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "ISZERO"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "JUMPI"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "INVALID"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "EQ"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "ISZERO"
										},
										{
											"begin": 1309,
											"end": 1343,
											"name": "ISZERO"
										},
										{
											"begin": 1309,
											"end": 1343,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1309,
											"end": 1343,
											"name": "JUMPI"
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "JUMP"
										},
										{
											"begin": 1309,
											"end": 1343,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1309,
											"end": 1343,
											"name": "JUMPDEST"
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "CALLER"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "AND"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "AND"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "KECCAK256"
										},
										{
											"begin": 1353,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1394,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP1"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "ADD"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SLOAD"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "EXP"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "DIV"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1421,
											"name": "AND"
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "DUP1"
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "JUMPI"
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "POP"
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1439,
											"end": 1455,
											"name": "DUP1"
										},
										{
											"begin": 1439,
											"end": 1455,
											"name": "SLOAD"
										},
										{
											"begin": 1439,
											"end": 1455,
											"name": "SWAP1"
										},
										{
											"begin": 1439,
											"end": 1455,
											"name": "POP"
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "DUP3"
										},
										{
											"begin": 1425,
											"end": 1455,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1425,
											"end": 1455,
											"name": "AND"
										},
										{
											"begin": 1425,
											"end": 1455,
											"name": "LT"
										},
										{
											"begin": 1425,
											"end": 1455,
											"name": "ISZERO"
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "JUMPDEST"
										},
										{
											"begin": 1405,
											"end": 1464,
											"name": "ISZERO"
										},
										{
											"begin": 1405,
											"end": 1464,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1405,
											"end": 1464,
											"name": "JUMPI"
										},
										{
											"begin": 1457,
											"end": 1464,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1457,
											"end": 1464,
											"name": "JUMP"
										},
										{
											"begin": 1405,
											"end": 1464,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1405,
											"end": 1464,
											"name": "JUMPDEST"
										},
										{
											"begin": 1489,
											"end": 1493,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "ADD"
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "EXP"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "SLOAD"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "MUL"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "NOT"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "AND"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "SWAP1"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "DUP4"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "ISZERO"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "ISZERO"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "MUL"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "OR"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "SWAP1"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "SSTORE"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "POP"
										},
										{
											"begin": 1518,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP2"
										},
										{
											"begin": 1504,
											"end": 1515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1515,
											"name": "ADD"
										},
										{
											"begin": 1504,
											"end": 1515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "EXP"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "SLOAD"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "MUL"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "NOT"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "AND"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "SWAP1"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "DUP4"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "AND"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "MUL"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "OR"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "SWAP1"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "SSTORE"
										},
										{
											"begin": 1504,
											"end": 1528,
											"name": "POP"
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP1"
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "ADD"
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "SLOAD"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1552,
											"end": 1562,
											"name": "DUP4"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "AND"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "SLOAD"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "LT"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "ISZERO"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "ISZERO"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "JUMPI"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "INVALID"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "JUMPDEST"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "SWAP1"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "KECCAK256"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1542,
											"end": 1573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1542,
											"end": 1573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "DUP3"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "DUP3"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "SLOAD"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "ADD"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "SWAP3"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "POP"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "POP"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "DUP2"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "SWAP1"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "SSTORE"
										},
										{
											"begin": 1542,
											"end": 1590,
											"name": "POP"
										},
										{
											"begin": 1623,
											"end": 1633,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "SLOAD"
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1605,
											"end": 1634,
											"name": "GT"
										},
										{
											"begin": 1601,
											"end": 1657,
											"name": "ISZERO"
										},
										{
											"begin": 1601,
											"end": 1657,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1601,
											"end": 1657,
											"name": "JUMPI"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "DUP1"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "EXP"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "DUP2"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "SLOAD"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "DUP2"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "MUL"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "NOT"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "AND"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "DUP4"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "DUP2"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "GT"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "ISZERO"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "JUMPI"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "INVALID"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "JUMPDEST"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "MUL"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "OR"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "SSTORE"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "POP"
										},
										{
											"begin": 1601,
											"end": 1657,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1601,
											"end": 1657,
											"name": "JUMPDEST"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SLOAD"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "EXP"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DIV"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 274,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"Learning Contrats v0.4.0/BallotWithStages.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Learning Contrats v0.4.0/BallotWithStages.sol\":{\"keccak256\":\"0x2448011532975f73b35598970814fc86f609633234301abb3c8174c2c3d30a70\",\"urls\":[\"bzzr://a8133412a8a291f4e1983e5e9795c0e81fb17c8308a79da27c62e39cfec73ed0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Learning Contrats v0.4.0/BallotWithStages.sol:25:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ballot(uint8 _numProposals) public  {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 747,
					"file": "Learning Contrats v0.4.0/BallotWithStages.sol",
					"start": 485
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Learning Contrats v0.4.0/BallotWithStages.sol": {
				"ast": {
					"absolutePath": "Learning Contrats v0.4.0/BallotWithStages.sol",
					"exportedSymbols": {
						"Ballot": [
							230
						]
					},
					"id": 231,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 230,
							"linearizedBaseContracts": [
								230
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "74:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "74:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "96:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "96:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "117:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "117:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 230,
									"src": "50:85:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "168:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "168:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 230,
									"src": "141:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "210:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "215:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "220:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "226:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "198:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "243:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "243:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "264:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "264:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "287:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "313:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "321:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "313:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "332:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "352:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "352:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "352:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 230,
									"src": "387:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "387:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "530:217:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "541:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "555:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "555:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "541:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "576:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 43,
															"indexExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "583:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "576:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "576:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "605:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "576:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "576:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 48,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "653:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "653:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "672:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "653:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "653:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "696:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "704:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "704:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "696:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "696:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "724:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "724:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "724:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 64,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ballot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "501:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 32,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:0:0"
									},
									"scope": 230,
									"src": "485:262:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "903:292:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "918:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 70,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "927:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "918:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 75,
												"nodeType": "IfStatement",
												"src": "914:33:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "938:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 68,
															"id": 73,
															"nodeType": "Return",
															"src": "939:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "961:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "961:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 78,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "975:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "961:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 80,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "990:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 82,
															"indexExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "990:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "990:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "961:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 86,
												"nodeType": "IfStatement",
												"src": "957:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 68,
													"id": 85,
													"nodeType": "Return",
													"src": "1013:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1030:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1037:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1030:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1030:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1055:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1030:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1030:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1067:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 96,
															"indexExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1074:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1067:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1067:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1091:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1067:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1067:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1111:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1118:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1129:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1118:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 105,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1117:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1111:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 117,
												"nodeType": "IfStatement",
												"src": "1107:73:0",
												"trueBody": {
													"id": 116,
													"nodeType": "Block",
													"src": "1142:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1143:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 108,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1151:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1151:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1143:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 111,
															"nodeType": "ExpressionStatement",
															"src": "1143:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 112,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1163:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1175:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1163:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 115,
															"nodeType": "ExpressionStatement",
															"src": "1163:15:0"
														}
													]
												}
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 119,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "878:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:0:0"
									},
									"scope": 230,
									"src": "861:334:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1298:384:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1313:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1322:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1322:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1313:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1309:34:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "1334:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 123,
															"id": 128,
															"nodeType": "Return",
															"src": "1335:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "1353:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 131,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1353:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1376:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 136,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "1383:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1383:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1376:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1353:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1409:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 140,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "1425:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 141,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1439:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1439:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1425:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1409:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 146,
												"nodeType": "IfStatement",
												"src": "1405:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 123,
													"id": 145,
													"nodeType": "Return",
													"src": "1457:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 147,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1474:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1474:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1489:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1474:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 153,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1504:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1504:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 156,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1518:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1504:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1504:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 159,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 161,
															"indexExpression": {
																"argumentTypes": null,
																"id": 160,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1542:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1542:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 163,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1577:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1577:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1542:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1542:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1605:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 168,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1612:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1623:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1612:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 171,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1611:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1605:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 179,
												"nodeType": "IfStatement",
												"src": "1601:56:0",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "1636:21:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 173,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 174,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1645:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1645:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1637:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "1637:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 181,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1272:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 120,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1272:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1271:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1298:0:0"
									},
									"scope": 230,
									"src": "1258:424:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1766:346:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1779:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 187,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1788:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1788:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1779:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 192,
												"nodeType": "IfStatement",
												"src": "1776:33:0",
												"trueBody": {
													"id": 191,
													"nodeType": "Block",
													"src": "1800:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 185,
															"id": 190,
															"nodeType": "Return",
															"src": "1801:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "1819:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1846:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1819:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 208,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1929:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 210,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 209,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1939:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1929:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1929:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 212,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1957:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1929:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 226,
													"nodeType": "IfStatement",
													"src": "1925:171:0",
													"trueBody": {
														"id": 225,
														"nodeType": "Block",
														"src": "1975:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 214,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "1994:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 215,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2013:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 217,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 216,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "2023:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2013:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "2013:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1994:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 220,
																"nodeType": "ExpressionStatement",
																"src": "1994:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 221,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "2057:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 222,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2076:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2057:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 224,
																"nodeType": "ExpressionStatement",
																"src": "2057:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 201,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1879:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 202,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1886:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1879:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 227,
												"initializationExpression": {
													"assignments": [
														198
													],
													"declarations": [
														{
															"constant": false,
															"id": 198,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 229,
															"src": "1863:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 197,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1863:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 200,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1876:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1863:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1904:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 205,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1904:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 207,
													"nodeType": "ExpressionStatement",
													"src": "1904:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1858:238:0"
											}
										]
									},
									"documentation": null,
									"id": 229,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1714:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1742:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 183,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1742:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1741:24:0"
									},
									"scope": 230,
									"src": "1690:422:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 231,
							"src": "25:2090:0"
						}
					],
					"src": "0:2117:0"
				},
				"id": 0
			}
		}
	}
}